#!/usr/bin/env python3
# Copyright (c) 2015 Heikki Hokkanen <hoxu at users.sf.net>
# License: GPLv2 or later
import datetime
import os
import re
import subprocess
import shutil
import sys
import tempfile

# TODO make incremental (can run multiple times)
# TODO usage: $0 rdiff-backup-repo repo.attic
# TODO option: archive prefix for "attic create"
# TODO option: tmpdir

def fail(msg):
    print(msg)
    sys.exit(1)

def parse_rdiff_increments(lines):
    increments = []
    for i in lines[1:]:
        if len(i) == 0:
            continue
        m = re.search(' *increments\.[^\.]+\.dir   (.*)', i)
        datestring = None
        if m:
            datestring = m.group(1)
        m = re.search('Current mirror: (.*)', i)
        if m:
            datestring = m.group(1)
        stamp = datetime.datetime.strptime(datestring, '%a %b %d %H:%M:%S %Y')
        increments.append(stamp.strftime('%Y-%m-%dT%H:%M:%S')) # FIXME timezone
    return increments

def parse_attic_archives(lines):
    archives = []
    for line in lines:
        if len(line) == 0:
            continue
        archives.append(line.split(' ')[0])
    return archives

def parse_rdiff_repo(path):
    lines = subprocess.check_output(['rdiff-backup', '--list-increments', path]).decode('utf-8').split('\n')
    return parse_rdiff_increments(lines)

def parse_attic_repo(path):
    lines = subprocess.check_output(['attic', 'list', path]).decode('utf-8').split('\n')
    return parse_attic_archives(lines)

def get_increments_to_convert(increments, archives):
    return [increment for increment in increments if increment not in archives]

def restore_rdiff_increment(rdiff_dir, destination_dir, increment):
    subprocess.check_call(['rdiff-backup', '-r', increment, rdiff_dir, destination_dir])

def attic_create(attic_dir, archive_name, path):
    subprocess.check_call(['attic', 'create', '%s::%s' % (attic_dir, archive_name), path])

def convert_increment(rdiff_dir, attic_dir, increment):
    destination_dir = tempfile.mkdtemp('rb2a')

    restore_rdiff_increment(rdiff_dir, destination_dir, increment)
    attic_create(attic_dir, increment, destination_dir)

    shutil.rmtree(destination_dir)

def run():
    src = sys.argv[1]
    dst = sys.argv[2]

    # check that source is rdiff-backup repo
    if not os.path.exists(os.path.join(src, 'rdiff-backup-data')):
        fail('"%s" does not look like rdiff-backup repository' % src)

    # check that destination is attic repo
    if not os.path.exists(os.path.join(dst, 'config')):
        fail('"%s" does not look like attic repository' % dst)

    increments = parse_rdiff_repo(src)
    archives = parse_attic_repo(dst)

    for increment in increments:
        #  check whether attic contains rdiff-backup increment as archive
        if increment in archives:
            print('Skipping already converted increment "%s"' % increment)
        convert_increment(src, dst, increment)

if __name__ == '__main__':
    run()
